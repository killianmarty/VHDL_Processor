----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 04/29/2025 10:04:37 AM
-- Design Name: 
-- Module Name: instr_memory - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity instr_memory is
    port(
        CLK     : in  std_logic;
        ADDR    : in  std_logic_vector(7 downto 0);
        ENABLED : in std_logic;
        INSTR   : out std_logic_vector(31 downto 0);
        INSTR_NEXT : out std_logic_vector(31 downto 0)
    );
end instr_memory;

architecture rom of instr_memory is
    type rom_t is array (255 downto 0) of std_logic_vector(31 downto 0);
    constant ROM_CONTENT : rom_t := (
0 => x"00000000",
1 => x"06000100",
2 => x"11000000",
3 => x"06000000",
4 => x"11ff0000",
5 => x"1000ff00",
6 => x"00000000",
7 => x"110b0000",
8 => x"06000a00",
9 => x"11fe0000",
10 => x"10000b00",
11 => x"1001fe00",
12 => x"0a000001",
13 => x"11ff0000",
14 => x"1000ff00",
15 => x"08670000",
16 => x"07180000",
17 => x"06000100",
18 => x"11fe0000",
19 => x"10000b00",
20 => x"1001fe00",
21 => x"01000001",
22 => x"110b0000",
23 => x"07070000",
24 => x"10000000",
25 => x"10010b00",
26 => x"01000001",
27 => x"11fe0000",
28 => x"1000fe00",
29 => x"00000000",
30 => x"110c0000",
31 => x"06000200",
32 => x"11fd0000",
33 => x"10000b00",
34 => x"1001fd00",
35 => x"04000001",
36 => x"11fe0000",
37 => x"06000200",
38 => x"11fd0000",
39 => x"1000fe00",
40 => x"1001fd00",
41 => x"02000001",
42 => x"11fe0000",
43 => x"1000fe00",
44 => x"10010b00",
45 => x"0c000001",
46 => x"11fe0000",
47 => x"1000fe00",
48 => x"084d0000",
49 => x"06000500",
50 => x"11fd0000",
51 => x"10000b00",
52 => x"1001fd00",
53 => x"0a000001",
54 => x"11fe0000",
55 => x"1000fe00",
56 => x"08430000",
57 => x"06000200",
58 => x"11fd0000",
59 => x"10000b00",
60 => x"1001fd00",
61 => x"02000001",
62 => x"11fe0000",
63 => x"10000c00",
64 => x"1001fe00",
65 => x"0e000100",
66 => x"074b0000",
67 => x"06000a00",
68 => x"11fd0000",
69 => x"10000b00",
70 => x"1001fd00",
71 => x"01000001",
72 => x"11fe0000",
73 => x"10000c00",
74 => x"1001fe00",
75 => x"0e000100",
76 => x"07650000",
77 => x"06000700",
78 => x"11fd0000",
79 => x"10000b00",
80 => x"1001fd00",
81 => x"0b000001",
82 => x"11fe0000",
83 => x"1000fe00",
84 => x"085f0000",
85 => x"06000300",
86 => x"11fd0000",
87 => x"10000b00",
88 => x"1001fd00",
89 => x"03000001",
90 => x"11fe0000",
91 => x"10000c00",
92 => x"1001fe00",
93 => x"0e000100",
94 => x"07650000",
95 => x"10000b00",
96 => x"10010b00",
97 => x"02000001",
98 => x"11fe0000",
99 => x"10000c00",
100 => x"1001fe00",
101 => x"0e000100",
102 => x"07110000",
103 => x"00000000",
104 => x"06000000",
105 => x"11ff0000",
106 => x"1000ff00",
107 => x"00000000",
108 => x"110b0000",
109 => x"06000000",
110 => x"11ff0000",
111 => x"1000ff00",
112 => x"00000000",
113 => x"110c0000",
114 => x"06000300",
115 => x"11fe0000",
116 => x"10000b00",
117 => x"1001fe00",
118 => x"0a000001",
119 => x"11ff0000",
120 => x"1000ff00",
121 => x"08b40000",
122 => x"06000000",
123 => x"11ff0000",
124 => x"1000ff00",
125 => x"00000000",
126 => x"110c0000",
127 => x"06000200",
128 => x"11fe0000",
129 => x"10000c00",
130 => x"1001fe00",
131 => x"0a000001",
132 => x"11ff0000",
133 => x"1000ff00",
134 => x"08ad0000",
135 => x"06000200",
136 => x"11fd0000",
137 => x"10000b00",
138 => x"1001fd00",
139 => x"02000001",
140 => x"11fe0000",
141 => x"10000000",
142 => x"1001fe00",
143 => x"01000001",
144 => x"11ff0000",
145 => x"1000ff00",
146 => x"10010c00",
147 => x"01000001",
148 => x"11ff0000",
149 => x"1000ff00",
150 => x"00000000",
151 => x"110d0000",
152 => x"10000d00",
153 => x"0f010000",
154 => x"11ff0100",
155 => x"1000ff00",
156 => x"10010b00",
157 => x"01000001",
158 => x"11ff0000",
159 => x"1000ff00",
160 => x"10010c00",
161 => x"01000001",
162 => x"11ff0000",
163 => x"10000d00",
164 => x"1001ff00",
165 => x"0e000100",
166 => x"06000100",
167 => x"11ff0000",
168 => x"10000c00",
169 => x"1001ff00",
170 => x"01000001",
171 => x"110c0000",
172 => x"077e0000",
173 => x"06000100",
174 => x"11ff0000",
175 => x"10000b00",
176 => x"1001ff00",
177 => x"01000001",
178 => x"110b0000",
179 => x"07710000",
others => x"00000000"
    );
    signal ROM : rom_t := ROM_CONTENT;
    signal enabled_prev : std_logic := '1';
begin
    process(CLK)
    begin
        if rising_edge(CLK) then
            enabled_prev <= ENABLED;
        end if;
    end process;

    INSTR <= ROM(to_integer(unsigned(ADDR))) when enabled_prev = '1' else x"00000000";
    INSTR_NEXT <= ROM(to_integer(unsigned(ADDR)+1));
    
end rom;